v2 change log:
2024/06/06: 1) update emission inputs from NEI2014 to NEI2017; 2) separate scaling factors for brake and tire wear emissions versus others; 3) in process_VMT.R, spatial intersection by each state and then combine for quicker speeds; 4) major updates to source code and control files (settings.yaml & run.py) to account for these adjustments and parameters addition/deletion. 

v1 Change Log:
2022/6/15: enable command-line parser, so that users can customize input/output file names, PM2.5 factor, etc. by changing parameters in settings.yaml file. 
2022/9/5: PM2.5 factor changed from 0 to 0.15; emission input changed from "nei_isrm_summary_onroad.csv" to "nei_isrm_summary_onroad_LDV.csv" (i.e., removed light commercial truck categories, now only 7, instead of 10, SCCs are considered of interest). 

_______________________________________________________________

The LDVEMIS model in BILD-AQ project is designed to translate VMT changes in different scenarios to light-duty vehicle (LDV) emission changes of air pollutants such as NOx, VOC, NH3, SOx and PM2.5. 

Input (in "input" folder) includes a tract-level VMT data file (E.g., "Sample_Input_CA.csv") that should be provided either by the user directly or by upstream models, and other data files that have already been pre-generated by LDVEMIS team. Output of the LDVEMIS model is a csv file that estimates changes of NOx, VOC, NH3, SOx and PM2.5 emissions at each ISRM grid (unit = short ton/year). 

_______________________________________________________________
Description of files in the LDVEMIS library:

1. run.py - an executable python script that reads settings from settings.yaml and calls LDVEMIS docker to execute the whole simulation.

2. settings.yaml - a user-friendly configuration file for setting high-level parameters, such as input/output file name, emission category, etc. 

3. environment.txt - a list of python packages needed for running run.py. Please make sure to install them before starting. 

4. input/HPMS/network_isrm_*.RData - pre-processed data for simulations inside each of the CONUS states. Each row in this RData is a HPMS road segment by census tract and ISRM grid. 

5. input/onroad_NEI2017_LDV_btw.csv - a pre-processed data file for ISRM-gridded LDV brake and tire wear emissions. Raw data are extracted from 2017 National Emission Inventory (NEI) and are allocated to ISRM grids by our team. Included: On- and off-network; passenger car and passengar truck; brake and tire wear process emissions. 

5. input/onroad_NEI2017_LDV_nbtw.csv - a pre-processed data file for ISRM-gridded LDV emissions excluding brake and tire wear portion. Raw data are extracted from 2017 National Emission Inventory (NEI) and are allocated to ISRM grids by our team. Included: On- and off-network; passenger car and passenger truck; all onroad emissions except brake and tire wear. 

6. input/adj_factor_nbtw.csv - a pre-processed data file for adjustment factors for non-brake-and-tire-wear onroad LDV emissions. 

7. input/Sample_Input_CA.csv - a FAKE example of user- or upstream-provided VMT data. In general, this input should provides tract-level VMT data under the baseline ("VMT_base" column) versus in a specific scenario ("VMT_scenarios" column). You can provide VMT data for any number of census tracts, and can also name it whatever you like (but make sure to change "input_fname" accordingly in settings.yaml). 

8. output/Sample_Output_CA.csv - a FAKE example output that LDVEMIS generates using the FAKE "Sample_Input_CA.csv". Its "VOC/NOx/NH3/SOx/PM25" columns indicate emission changes of those air pollutants at each ISRM grid (unit = short ton/year). 

_______________________________________________________________
To run the LDVEMIS module:

1) Check environment.txt and make sure you have installed the packages listed. 

2) Make sure your docker engine is running properly by entering "sudo service docker status". If not running,  start it by "sudo service docker start". 

3) Under a directory that you like, ${LDVEMIS_HOME}, put "settings.yaml" and "run.py"

4) Create two folders named "input" and "output"

5) Put "onroad_NEI2017_LDV_nbtw.csv", "onroad_NEI2017_LDV_btw.csv", "adj_factor_nbtw.csv" and "HPMS/network_isrm_*.RData" in input folder

6) Provide the VMT change data anyname_input.csv (its data should follow the "Sample_Input_CA.csv" format) in input folder
*** this is the only input required from user/upstream model

7) In settings.yaml, set input_fname to be the input name you used (e.g., "input_fname: anyname_input.csv"), set output_fname to be the output name you want, and set nbtw_adj_factor_year to match your output year (it determines which year of adjustment factor will be applied to non-brake-and-tire-wear emissions).

8) Update other setting in settings.yaml wherever needed. We recommend keeping settings as they are, unless there is a "custmoziable" note. 

9) Under ${LDVEMIS_HOME} directory, enter "python run run.py" to run the main python script

10) When the run is done, check the output (its name can be customized in settings.yaml before the run) in output folder
